// Example usage of lilp - T·ª≠ vi ƒë·∫©u s·ªë calculation library
// This demonstrates how to use the compiled JavaScript library

const { quickCalculate, calculateTuVi, LIBRARY_INFO } = require('./dist/index.js');

console.log('='.repeat(60));
console.log(`${LIBRARY_INFO.name} v${LIBRARY_INFO.version}`);
console.log(LIBRARY_INFO.description);
console.log('='.repeat(60));

// Example 1: Quick calculation using convenience function
console.log('\nüåü Example 1: Quick Calculation');
console.log('Input: Ng√†y 15, Th√°ng 8, NƒÉm 1990, Gi·ªù 14 (2:00 PM), Nam');

try {
  const result1 = quickCalculate(15, 8, 1990, 14, 'male');
  
  console.log('\nüìä T·ª≠ vi Chart Results:');
  console.log('Cung M·ªánh:', result1.cungMenh);
  console.log('Cung Th√¢n:', result1.cungThan);
  console.log('Nguy√™n C·ª•c:', result1.metadata.nguyenCuc);
  console.log('T·ª≠ Vi Tinh ƒê·ªô:', result1.metadata.tuViTinhDo);
  
  console.log('\nüèõÔ∏è Can Chi Information:');
  console.log('NƒÉm:', result1.metadata.canChi.nam);
  console.log('Th√°ng:', result1.metadata.canChi.thang);
  console.log('Ng√†y:', result1.metadata.canChi.ngay);
  console.log('Gi·ªù:', result1.metadata.canChi.gio);
  
  console.log('\nüåü Main Stars in Palaces:');
  Object.entries(result1.palaces).forEach(([cung, info]) => {
    if (info.chuTinh.length > 0) {
      console.log(`${cung}: ${info.chuTinh.join(', ')} (${info.nguHanh})`);
    }
  });
  
  console.log('\n‚≠ê Supporting Stars in Palaces:');
  Object.entries(result1.palaces).forEach(([cung, info]) => {
    if (info.phuTinh.length > 0) {
      console.log(`${cung}: ${info.phuTinh.join(', ')}`);
    }
  });

} catch (error) {
  console.error('Error in calculation:', error.message);
}

// Example 2: Using detailed input object
console.log('\n\nüåü Example 2: Detailed Input');
console.log('Input: Ng√†y 3, Th√°ng 12, NƒÉm 1985, Gi·ªù 22 (10:00 PM), N·ªØ');

try {
  const lunarDate = {
    day: 3,
    month: 12, 
    year: 1985,
    hour: 22,
    gender: 'female'
  };
  
  const options = {
    useModernMethod: true,
    includeMinorStars: true,
    includeLuckyStars: true
  };
  
  const result2 = calculateTuVi(lunarDate, options);
  
  console.log('\nüìä Complete JSON Output:');
  console.log(JSON.stringify(result2, null, 2));

} catch (error) {
  console.error('Error in detailed calculation:', error.message);
}

console.log('\n' + '='.repeat(60));
console.log('‚ú® Calculation completed successfully!');
console.log('‚ú® All results are in JSON format for easy integration');
console.log('='.repeat(60));